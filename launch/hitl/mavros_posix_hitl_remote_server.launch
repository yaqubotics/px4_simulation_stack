<launch>

   <!-- Posix SITL environment launch script -->
    <arg name="use_urdf" default="false" />

    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>
    <arg name="est" default="ekf2"/>

    <arg name="vehicle" default="iris"/>
    <arg name="world" default="$(find mavlink_sitl_gazebo)/worlds/empty.world"/>

    <!-- Generate model from xacro and run robot state publisher -->
    <arg if="$(arg use_urdf)" name="model" default="$(find px4_simulation_stack)/Tools/sitl_gazebo/models/$(arg vehicle)/urdf/$(arg vehicle).urdf"/>
    <group if="$(arg use_urdf)">
        <arg name="mavlink_udp_port" default="14560"/>
        <arg name="cmd" default="$(find xacro)/xacro $(arg model) mavlink_udp_port:=$(arg mavlink_udp_port) --inorder"/>
        <param command="$(arg cmd)" name="robot_description" />

        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
    </group>
    <!-- load sdf if not use xacro -->
    <arg unless="$(arg use_urdf)" name="model" default="$(find px4_simulation_stack)/Tools/sitl_gazebo/models/$(arg vehicle)/$(arg vehicle).sdf"/>

    <env name="PX4_SIM_MODEL" value="$(arg vehicle)" />
    <env name="PX4_ESTIMATOR" value="$(arg est)" />

    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>
    <arg name="respawn_gazebo" default="false"/>

    <!-- PX4 configs -->
    <arg name="interactive" default="true"/>
    <!-- PX4 SITL and Gazebo -->
    <arg unless="$(arg interactive)" name="px4_command_arg1" value="-d"/>
    <arg     if="$(arg interactive)" name="px4_command_arg1" value=""/>
    <node name="sitl" pkg="px4" type="px4" output="screen"
        args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS $(arg px4_command_arg1)" required="true"/>

    <!-- Launching gzserver -->
    <include file="$(find px4_simulation_stack)/launch/gazebo/gzserver.launch">
        <arg name="world_name" value="$(arg world)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="verbose" value="$(arg verbose)" />
        <arg name="paused" value="$(arg paused)" />
        <arg name="respawn_gazebo" value="$(arg respawn_gazebo)"/>
    </include>

    <!-- MAVROS -->
    <!--arg name="fcu_url" default="fcu_url:=/dev/ttyACM1:921600"/-->
    <arg name="fcu_url" default="udp://:14540@localhost:14557"/>
    <!--arg name="fcu_url" default="udp://:14550@localhost:14556"/-->
	<!--arg name="gcs_url" default="udp://:14556@localhost:14550" /-->
    <arg name="gcs_url" default="" />
	<arg name="tgt_system" default="1" />
	<arg name="tgt_component" default="1" />
	<arg name="log_output" default="screen" />
	<arg name="fcu_protocol" default="v2.0" />
	<arg name="respawn_mavros" default="false" />
    <include file="$(find mavros)/launch/node.launch">
        <!-- GCS link is provided by SITL -->
        <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
        <arg name="config_yaml" default="$(find px4_simulation_stack)/launch/config/px4_config.yaml"/>

		<arg name="fcu_url" value="$(arg fcu_url)" />
		<arg name="gcs_url" value="$(arg gcs_url)" />
		<arg name="tgt_system" value="$(arg tgt_system)" />
		<arg name="tgt_component" value="$(arg tgt_component)" />
		<arg name="log_output" value="$(arg log_output)" />
		<arg name="fcu_protocol" value="$(arg fcu_protocol)" />
		<arg name="respawn_mavros" default="$(arg respawn_mavros)" />
    </include>

    <!-- gazebo model -->
    <!-- spawn urdf generated from xacro -->
    <node if="$(arg use_urdf)" name="$(anon vehicle_spawn)" pkg="gazebo_ros" type="spawn_model" output="screen" args="-param robot_description -urdf -model $(arg vehicle) -package_to_model -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)"/>
    <!-- spawn sdf -->
    <node unless="$(arg use_urdf)" name="$(anon vehicle_spawn)" pkg="gazebo_ros" type="spawn_model" output="screen" args="-sdf -file $(arg model) -model $(arg vehicle) -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)"/>

</launch>

<!-- vim: set et ft=xml fenc=utf-8 ff=unix sts=0 sw=4 ts=4 : -->