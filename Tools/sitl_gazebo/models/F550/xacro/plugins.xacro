<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- rosbag macro -->
  <xacro:macro name="rosbag_plugin"
               params="namespace bagfile rotor_velocity_slowdown_sim">
    <gazebo>
      <plugin name='rosbag' filename='libgazebo_multirotor_base_plugin.so'>
          <robotNamespace>${namespace}</robotNamespace>
          <bagFileName>${bagfile}</bagFileName>
          <linkName>base_link</linkName>
          <frameId>base_link</frameId>
          <commandAttitudeThrustSubTopic>command/attitude</commandAttitudeThrustSubTopic>
          <commandAttitudeThrustPubTopic>command/attitude</commandAttitudeThrustPubTopic>
          <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
      </plugin>
    </gazebo>
  </xacro:macro>

  <!-- GPS macro -->
  <xacro:macro name="gps_plugin" params="namespace gps_noise">
    <gazebo>
      <plugin name='gps_plugin' filename='libgazebo_gps_plugin.so'>
          <robotNamespace>${namespace}</robotNamespace>
          <gpsNoise>${gps_noise}</gpsNoise>
      </plugin>
    </gazebo>
  </xacro:macro>

  <!-- mavlink interface macro -->
  <xacro:macro name="mavlink_interface_plugin"
               params="namespace imu_sub_topic gps_sub_topic
                       mavlink_addr mavlink_udp_port
                       serial_enabled serial_device baudrate
                       qgc_addr qgc_udp_port
                       hil_mode hil_state_level
                       vehicle_is_tailsitter send_odometry">
    <gazebo>
      <plugin name='mavlink_interface' filename='libgazebo_mavlink_interface.so'>
        <robotNamespace>${namespace}</robotNamespace>
        <imuSubTopic>${imu_sub_topic}</imuSubTopic>
        <gpsSubTopic>${gps_sub_topic}</gpsSubTopic>
        <mavlink_addr>$(arg mavlink_addr)</mavlink_addr>
        <mavlink_udp_port>$(arg mavlink_udp_port)</mavlink_udp_port>
        <serialEnabled>$(arg serial_enabled)</serialEnabled>
        <serialDevice>$(arg serial_device)</serialDevice>
        <baudRate>$(arg baudrate)</baudRate>
        <qgc_addr>$(arg qgc_addr)</qgc_addr>
        <qgc_udp_port>$(arg qgc_udp_port)</qgc_udp_port>
        <hil_mode>$(arg hil_mode)</hil_mode>
        <hil_state_level>$(arg hil_state_level)</hil_state_level>
        <vehicle_is_tailsitter>$(arg vehicle_is_tailsitter)</vehicle_is_tailsitter>
        <send_odometry>$(arg send_odometry)</send_odometry>
        <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
        <control_channels>
          <channel name='rotor1'>
            <input_index>0</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1000</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>100</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
            <joint_name>rotor_0_joint</joint_name>
          </channel>
          <channel name='rotor2'>
            <input_index>1</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1000</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>100</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
            <joint_name>rotor_1_joint</joint_name>
          </channel>
          <channel name='rotor3'>
            <input_index>2</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1000</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>100</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
            <joint_name>rotor_2_joint</joint_name>
          </channel>
          <channel name='rotor4'>
            <input_index>3</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1000</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>100</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
            <joint_name>rotor_3_joint</joint_name>
          </channel>
          <channel name='rotor5'>
            <input_index>4</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1000</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>100</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
            <joint_name>rotor_4_joint</joint_name>
          </channel>
          <channel name='rotor6'>
            <input_index>5</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1000</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>100</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
            <joint_name>rotor_5_joint</joint_name>
          </channel>
        </control_channels>
      </plugin>
    </gazebo>
    <static>0</static>
  </xacro:macro>

  <!-- IMU macro -->
  <xacro:macro name="imu_plugin"
               params="namespace imu_suffix mass_imu_sensor
                       parent_link imu_topic
                       gyroscope_noise_density
                       gyroscope_random_walk
                       gyroscope_bias_correlation_time
                       gyroscope_turn_on_bias_sigma
                       accelerometer_noise_density
                       accelerometer_random_walk
                       accelerometer_bias_correlation_time
                       accelerometer_turn_on_bias_sigma
                       *inertia *origin">
    <!-- IMU Link -->
    <link name="${namespace}/imu${imu_suffix}_link">
      <inertial>
        <xacro:insert_block name="inertia" />
        <mass value="${mass_imu_sensor}"/> <!-- kg -->
        <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>
    </link>
    <!-- IMU Joint -->
    <joint name="${namespace}/imu${imu_suffix}_joint" type='revolute'>
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}"/>
      <child link="${namespace}/imu${imu_suffix}_link" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>
    <gazebo>
      <plugin name='rotors_gazebo_imu${imu_suffix}_plugin' filename='libgazebo_imu_plugin.so'>
        <!-- See below for the details of parameters:
            https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
        <robotNamespace>${namespace}</robotNamespace>
        <linkName>${namespace}/imu${imu_suffix}_link</linkName>
        <imuTopic>${imu_topic}</imuTopic>
        <gyroscopeNoiseDensity>${gyroscope_noise_density}</gyroscopeNoiseDensity>
        <gyroscopeRandomWalk>${gyroscope_random_walk}</gyroscopeRandomWalk>
        <gyroscopeBiasCorrelationTime>${gyroscope_bias_correlation_time}</gyroscopeBiasCorrelationTime>
        <gyroscopeTurnOnBiasSigma>${gyroscope_turn_on_bias_sigma}</gyroscopeTurnOnBiasSigma>
        <accelerometerNoiseDensity>${accelerometer_noise_density}</accelerometerNoiseDensity>
        <accelerometerRandomWalk>${accelerometer_random_walk}</accelerometerRandomWalk>
        <accelerometerBiasCorrelationTime>${accelerometer_bias_correlation_time}</accelerometerBiasCorrelationTime>
        <accelerometerTurnOnBiasSigma>${accelerometer_turn_on_bias_sigma}</accelerometerTurnOnBiasSigma>
      </plugin>
    </gazebo>
  </xacro:macro>

  <!-- Ground Truth macro -->
  <xacro:macro name="ground_truth"
               params="always_on update_rate gaussian_noise frame_name
                       xyz_offsets rpy_offsets">
    <gazebo>
      <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
        <alwaysOn>${always_on}</alwaysOn>
        <updateRate>${update_rate}</updateRate>
        <bodyName>base_link</bodyName>
        <topicName>ground_truth/state</topicName>
        <gaussianNoise>${gaussian_noise}</gaussianNoise>
        <frameName>${frame_name}</frameName>
        <xyzOffsets>${xyz_offsets}</xyzOffsets>
        <rpyOffsets>${rpy_offsets}</rpyOffsets>
      </plugin>
    </gazebo>
  </xacro:macro>

</robot>